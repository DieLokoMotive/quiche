var searchIndex = JSON.parse('{\
"quiche":{"doc":"ðŸ¥§ Savoury implementation of the QUIC transport â€¦","t":[0,17,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,8,10,10,3,11,3,11,4,13,12,12,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,6,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,3,12,12,3,12,12,12,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,3,3,12,12,12,12,12,12,4,13,13,13,13,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["h3","APPLICATION_PROTOCOL","Result","Error","Done","BufferTooShort","InternalError","ExcessiveLoad","IdError","StreamCreationError","ClosedCriticalStream","MissingSettings","FrameUnexpected","FrameError","QpackDecompressionFailed","TransportError","StreamBlocked","SettingsError","RequestRejected","RequestCancelled","RequestIncomplete","MessageError","ConnectError","VersionFallback","Config","new","set_max_header_list_size","set_qpack_max_table_capacity","set_qpack_blocked_streams","NameValue","name","value","Header","new","HeaderRef","new","Event","Headers","list","has_body","Data","Finished","Datagram","GoAway","Connection","with_transport","send_request","send_response","send_response_with_priority","send_body","dgram_enabled_by_peer","send_dgram","recv_dgram","dgram_max_writable_len","recv_body","poll","send_goaway","PROTOCOL_VERSION","MAX_CONN_ID_LEN","MIN_CLIENT_INITIAL_LEN","Result","Error","Done","BufferTooShort","UnknownVersion","InvalidFrame","InvalidPacket","InvalidState","InvalidStreamState","InvalidTransportParam","CryptoFail","TlsFail","FlowControl","StreamLimit","StreamStopped","FinalSize","CongestionControl","RecvInfo","from","SendInfo","to","at","ConnectionError","is_app","error_code","reason","Shutdown","Read","Write","Config","new","load_cert_chain_from_pem_file","load_priv_key_from_pem_file","load_verify_locations_from_file","load_verify_locations_from_directory","verify_peer","grease","log_keys","set_ticket_key","enable_early_data","set_application_protos","set_max_idle_timeout","set_max_recv_udp_payload_size","set_max_send_udp_payload_size","set_initial_max_data","set_initial_max_stream_data_bidi_local","set_initial_max_stream_data_bidi_remote","set_initial_max_stream_data_uni","set_initial_max_streams_bidi","set_initial_max_streams_uni","set_ack_delay_exponent","set_max_ack_delay","set_disable_active_migration","set_cc_algorithm_name","set_cc_algorithm","enable_hystart","enable_dgram","Connection","accept","connect","negotiate_version","retry","version_is_supported","set_keylog","set_session","recv","send","stream_recv","stream_send","stream_priority","stream_shutdown","stream_capacity","stream_readable","stream_finished","peer_streams_left_bidi","peer_streams_left_uni","stream_init_application_data","stream_application_data","readable","writable","max_send_udp_payload_size","dgram_recv","dgram_recv_peek","dgram_recv_front_len","dgram_send","dgram_purge_outgoing","dgram_max_writable_len","timeout","on_timeout","close","trace_id","application_proto","peer_cert","session","source_id","destination_id","is_established","is_resumed","is_in_early_data","is_readable","is_draining","is_closed","peer_error","stats","Stats","recv","sent","lost","rtt","cwnd","delivery_rate","ConnectionId","Header","ty","version","dcid","scid","token","versions","Type","Initial","Retry","Handshake","ZeroRTT","VersionNegotiation","Short","CongestionControlAlgorithm","Reno","CUBIC","StreamIter","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","name","value","name","value","as_ref","from","from","len","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","from_str","source","source","from_vec","from_ref","into_owned","from_slice"],"q":["quiche","quiche::h3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quiche::h3::Event","","quiche::h3","","","","","","","","","","","","","","","","","quiche","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quiche::h3","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quiche","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quiche::h3","","","","quiche","quiche::h3","quiche","","","","","","","","quiche::h3","","","","quiche","","","","","","","","","","","","","","quiche::h3","","","","","","","","quiche","","","","","","","","","","","quiche::h3","","","","quiche","","","","","quiche::h3","quiche","","","quiche::h3","quiche","","",""],"d":["HTTP/3 wire protocol and QPACK implementation.","List of ALPN tokens of supported HTTP/3 versions.","A specialized <code>Result</code> type for quiche HTTP/3 operations.","An HTTP/3 error.","There is no error or no work to do","The provided buffer is too short.","Internal error in the HTTP/3 stack.","Endpoint detected that the peer is exhibiting behavior â€¦","Stream ID or Push ID greater that current maximum was â€¦","The endpoint detected that its peer created a stream that â€¦","A required critical stream was closed.","No SETTINGS frame at beginning of control stream.","A frame was received which is not permitted in the â€¦","Frame violated layout or size rules.","QPACK Header block decompression failure.","Error originated from the transport layer.","The underlying QUIC stream (or connection) doesnâ€™t have â€¦","Error in the payload of a SETTINGS frame.","Server rejected request.","Request or its response cancelled.","Clientâ€™s request stream terminated without containing a â€¦","An HTTP message was malformed and cannot be processed.","The TCP connection established in response to a CONNECT â€¦","The requested operation cannot be served over HTTP/3. â€¦","An HTTP/3 configuration.","Creates a new configuration object with default settings.","Sets the <code>SETTINGS_MAX_HEADER_LIST_SIZE</code> setting.","Sets the <code>SETTINGS_QPACK_MAX_TABLE_CAPACITY</code> setting.","Sets the <code>SETTINGS_QPACK_BLOCKED_STREAMS</code> setting.","A trait for types with associated string name and value.","Returns the objectâ€™s name.","Returns the objectâ€™s value.","An owned name-value pair representing a raw HTTP header.","Creates a new header.","A non-owned name-value pair representing a raw HTTP â€¦","Creates a new header.","An HTTP/3 connection event.","Request/response headers were received.","The list of received header fields. The application â€¦","Whether data will follow the headers on the stream.","Data was received.","Stream was closed,","DATAGRAM was received.","GOAWAY was received.","An HTTP/3 connection.","Creates a new HTTP/3 connection using the provided QUIC â€¦","Sends an HTTP/3 request.","Sends an HTTP/3 response on the specified stream with â€¦","Sends an HTTP/3 response on the specified stream with â€¦","Sends an HTTP/3 body chunk on the given stream.","Returns whether the peer enabled HTTP/3 DATAGRAM frame â€¦","Sends an HTTP/3 DATAGRAM with the specified flow ID.","Reads a DATAGRAM into the provided buffer.","Returns the maximum HTTP/3 DATAGRAM payload that can be â€¦","Reads request or response body data into the provided â€¦","Processes HTTP/3 data received from the peer.","Sends a GOAWAY frame to initiate graceful connection â€¦","The current QUIC wire version.","The maximum length of a connection ID.","The minimum length of Initial packets sent by a client.","A specialized <code>Result</code> type for quiche operations.","A QUIC error.","There is no more work to do.","The provided buffer is too short.","The provided packet cannot be parsed because its version â€¦","The provided packet cannot be parsed because it contains â€¦","The provided packet cannot be parsed.","The operation cannot be completed because the connection â€¦","The operation cannot be completed because the stream is â€¦","The peerâ€™s transport params cannot be parsed.","A cryptographic operation failed.","The TLS handshake failed.","The peer violated the local flow control limits.","The peer violated the local stream limits.","The specified stream was stopped by the peer.","The received data exceeds the streamâ€™s final size.","Error in congestion control.","Ancillary information about incoming packets.","The address the packet was received from.","Ancillary information about outgoing packets.","The address the packet should be sent to.","The time to send the packet out.","Represents information carried by <code>CONNECTION_CLOSE</code> frames.","Whether the error came from the application or the â€¦","The error code carried by the <code>CONNECTION_CLOSE</code> frame.","The reason carried by the <code>CONNECTION_CLOSE</code> frame.","The streamâ€™s side to shutdown.","Stop receiving stream data.","Stop sending stream data.","Stores configuration shared between multiple connections.","Creates a config object with the given version.","Configures the given certificate chain.","Configures the given private key.","Specifies a file where trusted CA certificates are stored â€¦","Specifies a directory where trusted CA certificates are â€¦","Configures whether to verify the peerâ€™s certificate.","Configures whether to send GREASE values.","Enables logging of secrets.","Configures the session ticket key material.","Enables sending or receiving early data.","Configures the list of supported application protocols.","Sets the <code>max_idle_timeout</code> transport parameter, in â€¦","Sets the <code>max_udp_payload_size transport</code> parameter.","Sets the maximum outgoing UDP payload size.","Sets the <code>initial_max_data</code> transport parameter.","Sets the <code>initial_max_stream_data_bidi_local</code> transport â€¦","Sets the <code>initial_max_stream_data_bidi_remote</code> transport â€¦","Sets the <code>initial_max_stream_data_uni</code> transport parameter.","Sets the <code>initial_max_streams_bidi</code> transport parameter.","Sets the <code>initial_max_streams_uni</code> transport parameter.","Sets the <code>ack_delay_exponent</code> transport parameter.","Sets the <code>max_ack_delay</code> transport parameter.","Sets the <code>disable_active_migration</code> transport parameter.","Sets the congestion control algorithm used by string.","Sets the congestion control algorithm used.","Configures whether to enable HyStart++.","Configures whether to enable receiving DATAGRAM frames.","A QUIC connection.","Creates a new server-side connection.","Creates a new client-side connection.","Writes a version negotiation packet.","Writes a stateless retry packet.","Returns true if the given protocol version is supported.","Sets keylog output to the designated <code>Writer</code>.","Configures the given session for resumption.","Processes QUIC packets received from the peer.","Writes a single QUIC packet to be sent to the peer.","Reads contiguous data from a stream into the provided â€¦","Writes data to a stream.","Sets the priority for a stream.","Shuts down reading or writing from/to the specified â€¦","Returns the streamâ€™s send capacity in bytes.","Returns true if the stream has data that can be read.","Returns true if all the data has been read from the â€¦","Returns the number of bidirectional streams that can be â€¦","Returns the number of unidirectional streams that can be â€¦","Initializes the streamâ€™s application data.","Returns the streamâ€™s application data, if any was â€¦","Returns an iterator over streams that have outstanding â€¦","Returns an iterator over streams that can be written to.","Returns the maximum possible size of egress UDP payloads.","Reads the first received DATAGRAM.","Reads the first received DATAGRAM without removing it â€¦","Returns the length of the first stored DATAGRAM.","Sends data in a DATAGRAM frame.","Purges queued outgoing DATAGRAMs matching the predicate.","Returns the maximum DATAGRAM payload that can be sent.","Returns the amount of time until the next timeout event.","Processes a timeout event.","Closes the connection with the given error and reason.","Returns a string uniquely representing the connection.","Returns the negotiated ALPN protocol.","Returns the peerâ€™s leaf certificate (if any) as a â€¦","Returns the serialized cryptographic session for the â€¦","Returns the source connection ID.","Returns the destination connection ID.","Returns true if the connection handshake is complete.","Returns true if the connection is resumed.","Returns true if the connection has a pending handshake â€¦","Returns whether there is stream or DATAGRAM data â€¦","Returns true if the connection is draining.","Returns true if the connection is closed.","Returns the error received from the peer, if any.","Collects and returns statistics about the connection.","Statistics about the connection.","The number of QUIC packets received.","The number of QUIC packets sent.","The number of QUIC packets that were lost.","The estimated round-trip time of the connection.","The size of the connectionâ€™s congestion window in bytes.","The most recent data delivery rate estimate in bytes/s.","A QUIC connection ID.","A QUIC packetâ€™s header.","The type of the packet.","The version of the packet.","The destination connection ID of the packet.","The source connection ID of the packet.","The address verification token of the packet. Only â€¦","The list of versions in the packet. Only present in â€¦","QUIC packet type.","Initial packet.","Retry packet.","Handshake packet.","0-RTT packet.","Version negotiation packet.","1-RTT short header packet.","Available congestion control algorithms.","Reno congestion control algorithm. <code>reno</code> in a string form.","CUBIC congestion control algorithm (default). <code>cubic</code> in a â€¦","An iterator over QUIC streams.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a string to <code>CongestionControlAlgorithm</code>.","","","Creates a new connection ID from the given vector.","Creates a new connection ID from the given slice.","Returns a new owning connection ID from the given â€¦","Parses a QUIC packet header from the given buffer."],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,0,3,3,0,4,0,5,0,6,7,7,6,6,6,6,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,0,11,11,0,12,12,12,0,13,13,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,0,0,17,17,17,17,17,17,0,18,18,18,18,18,18,0,19,19,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,18,18,18,18,18,18,18,18,18,20,20,20,20,20,20,20,20,20,17,17,17,17,17,17,17,17,17,19,19,19,19,19,19,19,19,19,21,21,21,21,21,21,21,21,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,4,4,5,5,20,1,20,21,21,9,10,11,12,16,1,4,5,6,18,20,17,19,20,21,9,9,10,10,11,11,12,12,1,1,4,4,5,5,6,6,18,20,17,17,19,20,9,10,11,12,16,1,4,5,6,18,20,17,19,9,1,20,19,9,1,20,20,20,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",6],["config",3]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],null,[[],["str",15]],[[],["str",15]],null,[[["str",15]]],null,[[["str",15]]],null,null,null,null,null,null,null,null,null,[[["config",3],["connection",3]],[["connection",3],["result",6]]],[[["bool",15],["connection",3]],[["u64",15],["result",6]]],[[["bool",15],["connection",3],["u64",15]],["result",6]],[[["connection",3],["u64",15],["bool",15],["str",15]],["result",6]],[[["bool",15],["connection",3],["u64",15]],[["usize",15],["result",6]]],[[["connection",3]],["bool",15]],[[["connection",3],["u64",15]],["result",6]],[[["connection",3]],["result",6]],[[["connection",3],["u64",15]],[["usize",15],["option",4]]],[[["connection",3],["u64",15]],[["usize",15],["result",6]]],[[["connection",3]],["result",6]],[[["connection",3],["u64",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],[["result",6],["config",3]]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["bool",15]]],[[["bool",15]]],[[]],[[],["result",6]],[[]],[[],["result",6]],[[["u64",15]]],[[["usize",15]]],[[["usize",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["u64",15]]],[[["bool",15]]],[[["str",15]],["result",6]],[[["congestioncontrolalgorithm",4]]],[[["bool",15]]],[[["bool",15],["usize",15]]],null,[[["option",4],["socketaddr",4],["config",3],["connectionid",3]],[["result",6],["pin",3]]],[[["str",15],["socketaddr",4],["config",3],["option",4],["connectionid",3]],[["result",6],["pin",3]]],[[["connectionid",3]],[["usize",15],["result",6]]],[[["u32",15],["connectionid",3]],[["usize",15],["result",6]]],[[["u32",15]],["bool",15]],[[["write",8],["box",3]]],[[],["result",6]],[[["recvinfo",3]],[["usize",15],["result",6]]],[[],["result",6]],[[["u64",15]],["result",6]],[[["bool",15],["u64",15]],[["usize",15],["result",6]]],[[["u8",15],["bool",15],["u64",15]],["result",6]],[[["shutdown",4],["u64",15]],["result",6]],[[["u64",15]],[["usize",15],["result",6]]],[[["u64",15]],["bool",15]],[[["u64",15]],["bool",15]],[[],["u64",15]],[[],["u64",15]],[[["u64",15]],["result",6]],[[["u64",15]],[["any",8],["option",4]]],[[],["streamiter",3]],[[],["streamiter",3]],[[],["usize",15]],[[],[["usize",15],["result",6]]],[[["usize",15]],[["usize",15],["result",6]]],[[],[["usize",15],["option",4]]],[[],["result",6]],[[["fn",8]]],[[],[["usize",15],["option",4]]],[[],[["option",4],["duration",3]]],[[]],[[["bool",15],["u64",15]],["result",6]],[[],["str",15]],[[]],[[],[["vec",3],["option",4]]],[[],[["vec",3],["option",4]]],[[],["connectionid",3]],[[],["connectionid",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["connectionerror",3]]],[[],["stats",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[["error",4]]],[[["vec",3],["u8",15]]],[[],["usize",15]],[[],["option",4]],[[],["error",4]],[[],["recvinfo",3]],[[],["sendinfo",3]],[[],["connectionerror",3]],[[],["stats",3]],[[],["error",4]],[[],["header",3]],[[],["headerref",3]],[[],["event",4]],[[],["type",4]],[[]],[[],["header",3]],[[],["congestioncontrolalgorithm",4]],[[]],[[],["streamiter",3]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["recvinfo",3]],["bool",15]],[[["recvinfo",3]],["bool",15]],[[["sendinfo",3]],["bool",15]],[[["sendinfo",3]],["bool",15]],[[["connectionerror",3]],["bool",15]],[[["connectionerror",3]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["header",3]],["bool",15]],[[["header",3]],["bool",15]],[[["headerref",3]],["bool",15]],[[["headerref",3]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["type",4]],["bool",15]],[[],["bool",15]],[[["header",3]],["bool",15]],[[["header",3]],["bool",15]],[[["congestioncontrolalgorithm",4]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[],[["error",8],["option",4]]],[[],[["error",8],["option",4]]],[[["vec",3],["u8",15]]],[[]],[[],["connectionid",3]],[[["usize",15]],[["result",6],["header",3]]]],"p":[[4,"Error"],[3,"Config"],[8,"NameValue"],[3,"Header"],[3,"HeaderRef"],[4,"Event"],[13,"Headers"],[3,"Connection"],[4,"Error"],[3,"RecvInfo"],[3,"SendInfo"],[3,"ConnectionError"],[4,"Shutdown"],[3,"Config"],[3,"Connection"],[3,"Stats"],[3,"Header"],[4,"Type"],[4,"CongestionControlAlgorithm"],[3,"ConnectionId"],[3,"StreamIter"]]}\
}');
initSearch(searchIndex);